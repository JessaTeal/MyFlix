{"dependencies":[{"name":"lodash","loc":{"line":4,"column":18}},{"name":"./base","loc":{"line":5,"column":23}},{"name":"./utils","loc":{"line":6,"column":24}}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Result = exports.validationResult = void 0;\nconst _ = require(\"lodash\");\nconst base_1 = require(\"./base\");\nconst utils_1 = require(\"./utils\");\nexports.validationResult = Object.assign(withDefaults(), { withDefaults });\nclass Result {\n    constructor(formatter, errors) {\n        this.formatter = formatter;\n        this.errors = errors;\n    }\n    array(options) {\n        return options && options.onlyFirstError\n            ? Object.values(this.mapped())\n            : this.errors.map(this.formatter);\n    }\n    mapped() {\n        return this.errors.reduce((mapping, error) => {\n            if (!mapping[error.param]) {\n                mapping[error.param] = this.formatter(error);\n            }\n            return mapping;\n        }, {});\n    }\n    formatWith(formatter) {\n        return new Result(formatter, this.errors);\n    }\n    isEmpty() {\n        return this.errors.length === 0;\n    }\n    throw() {\n        if (!this.isEmpty()) {\n            throw Object.assign(new Error(), utils_1.bindAll(this));\n        }\n    }\n}\nexports.Result = Result;\nfunction withDefaults(options = {}) {\n    const defaults = {\n        formatter: error => error,\n    };\n    const actualOptions = _.defaults(options, defaults);\n    return (req) => {\n        const contexts = req[base_1.contextsKey] || [];\n        const errors = _.flatMap(contexts, 'errors');\n        return new Result(actualOptions.formatter, errors);\n    };\n}\n"},"hash":"57865415acd2730f398e2f25fdf32c21"}